import numpy as np
import pandas as pd
from sklearn.tree import DecisionTreeRegressor
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn import metrics

import matplotlib.pyplot as plt
%matplotlib inline

dataset = pd.read_csv('TTM.csv')

dataset.describe()

x = dataset[['High','Low','Open','Volume']].values
y = dataset['Close'].values

x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state=0)

regressor = LinearRegression()

regressor.fit(x_train,y_train)

print(regressor.coef_)

print(regressor.intercept_)

predicted = regressor.predict(x_test)


dframe = pd.DataFrame({'Actual':y_test.flatten(),'Predicted':predicted.flatten()})

dframe.head(25)

print('Mean Standard Error:',metrics.mean_absolute_error(y_test,predicted))
print('Mean Squared Error:',metrics.mean_squared_error(y_test,predicted))
print('Root Mean Squared Error:',math.sqrt(metrics.mean_squared_error(y_test,predicted)))


import math
graph = dframe.head(20)

graph.plot(kind='bar')
